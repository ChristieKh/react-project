{"version":3,"file":"main.224764eef97dde66113d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AAQA;AAAA;AAAA;;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;;;;AAEA;AACA;AAAA;;AAEA;AACA;AAAA;AAKA;;AATA;AAWA;;;;;;;;;;;;;;;;;ACfA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AADA;AAAA;AAMA;AAnBA","sources":["webpack://frontend-react-deep-cource/./src/pages/MainPage/ui/MainPage.stories.tsx","webpack://frontend-react-deep-cource/./src/pages/MainPage/ui/MainPage.tsx","webpack://frontend-react-deep-cource/./src/widgets/PageError/index.ts","webpack://frontend-react-deep-cource/./src/widgets/PageError/ui/BugButton.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { ComponentMeta, ComponentStory } from \\\"@storybook/react\\\";\\n\\nimport { ThemeDecorator } from \\\"shared/config/storybook/ThemeDecorator/ThemeDecorator\\\";\\nimport { Theme } from \\\"app/providers/ThemeProvider\\\";\\nimport MainPage from \\\"./MainPage\\\";\\n\\n\\nexport default {\\n\\ttitle: \\\"pages/MainPage\\\",\\n\\tcomponent: MainPage,\\n\\targTypes: {\\n\\t\\tbackgroundColor: { control: \\\"color\\\" },\\n\\t},\\n} as ComponentMeta<typeof MainPage>;\\n\\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\n\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":50,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":50,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}},\"Dark\":{\"startLoc\":{\"col\":50,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":50,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}}};\n    \nimport React from \"react\";\nimport { ComponentMeta, ComponentStory } from \"@storybook/react\";\n\nimport { ThemeDecorator } from \"shared/config/storybook/ThemeDecorator/ThemeDecorator\";\nimport { Theme } from \"app/providers/ThemeProvider\";\nimport MainPage from \"./MainPage\";\n\n\nexport default {\n\ttitle: \"pages/MainPage\",\n\tcomponent: MainPage,\n\targTypes: {\n\t\tbackgroundColor: { control: \"color\" },\n\t},\n} as ComponentMeta<typeof MainPage>;\n\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\n\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Dark.parameters };","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { BugButton } from \"widgets/PageError\";\n\nconst MainPage = () => {\n\tconst { t } = useTranslation(\"main\");\n\n\treturn (\n\t\t<div>\n\t\t\t<BugButton />\n\t\t\t{t(\"Главная\")}\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n","import { BugButton } from \"./ui/BugButton\";\nimport { PageError } from \"./ui/PageError\";\n\nexport {\n\tPageError,\n\tBugButton\n};\n","import { Button } from \"shared/ui/Button/Button\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const BugButton = () => {\n\tconst [error, setError] = useState(false);\n\tconst { t } = useTranslation();\n\n\tconst handleThrow = () => setError(true);\n\n\tuseEffect(() => {\n\t\tif(error) {\n\t\t\tthrow new Error();\n\t\t}\n\t}, [error]);\n\n\treturn (\n\t\t<Button\n\t\t\tonClick={handleThrow}\n\t\t>\n\t\t\t{t(\"Выбросить ошибку\")}\n\t\t</Button>\n\t);\n};\n"],"names":[],"sourceRoot":""}